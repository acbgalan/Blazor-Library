// <auto-generated />
using Library.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library.Server.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230505233359_DataSeed")]
    partial class DataSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Library.Shared.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<decimal>("Prize")
                        .HasPrecision(9, 2)
                        .HasColumnType("decimal(9,2)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "George Orwell",
                            CategoryId = 2,
                            Prize = 7.95m,
                            Title = "1984",
                            Year = 1949
                        },
                        new
                        {
                            Id = 2,
                            Author = "Aldous Huxley",
                            CategoryId = 2,
                            Prize = 7.95m,
                            Title = "Un mundo feliz",
                            Year = 1932
                        },
                        new
                        {
                            Id = 3,
                            Author = "George Orwell",
                            CategoryId = 2,
                            Prize = 8.50m,
                            Title = "Rebelión en la granja",
                            Year = 1945
                        });
                });

            modelBuilder.Entity("Library.Shared.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Acción y Aventura"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Clásicos"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cómic o novela gráfica"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Detective y misterio"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Fantasía"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Ficción histórica"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Ciencia ficción"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Suspense y Thriller"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Ficción de mujeres"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Biografías y autobiografías"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Libros de consultas"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Historia"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Poesía"
                        });
                });

            modelBuilder.Entity("Library.Shared.Book", b =>
                {
                    b.HasOne("Library.Shared.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Library.Shared.Category", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
